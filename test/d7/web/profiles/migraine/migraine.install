<?php
/**
 * @file
 * Install, update and uninstall functions for the migraine installation profile.
 */

/**
 * Implements hook_install().
 *
 * Perform actions to set up the site for this profile.
 */
function migraine_install() {
  if (!$vocabulary = taxonomy_vocabulary_machine_name_load('cheese_regions')) {
    $vocabulary = (object)array(
      'name' => st('Cheese regions'),
      'description' => '',
      'machine_name' => 'cheese_regions',
    );
    taxonomy_vocabulary_save($vocabulary);
  }

  module_load_include('admin.inc', 'taxonomy_manager');

  taxonomy_manager_mass_add_terms(
    file_get_contents(__DIR__ . '/exports/cheese_regions.txt'),
    $vocabulary->vid,
    array(),
  );

  // Add text formats.
  $filtered_html_format = array(
    'format' => 'filtered_html',
    'name' => 'Filtered HTML',
    'weight' => 0,
    'filters' => array(
      // URL filter.
      'filter_url' => array(
        'weight' => 0,
        'status' => 1,
      ),
      // HTML filter.
      'filter_html' => array(
        'weight' => 1,
        'status' => 1,
      ),
      // Line break filter.
      'filter_autop' => array(
        'weight' => 2,
        'status' => 1,
      ),
      // HTML corrector filter.
      'filter_htmlcorrector' => array(
        'weight' => 10,
        'status' => 1,
      ),
    ),
  );
  $filtered_html_format = (object) $filtered_html_format;
  filter_format_save($filtered_html_format);

  // Enable default permissions for system roles.
  $filtered_html_permission = filter_permission_name($filtered_html_format);
  user_role_grant_permissions(DRUPAL_ANONYMOUS_RID, array('access content', $filtered_html_permission));
  user_role_grant_permissions(DRUPAL_AUTHENTICATED_RID, array('access content', $filtered_html_permission));

  // Create a default role for site administrators, with all available permissions assigned.
  $admin_role = new stdClass();
  $admin_role->name = 'administrator';
  $admin_role->weight = 2;
  user_role_save($admin_role);
  user_role_grant_permissions($admin_role->rid, array_keys(module_invoke_all('permission')));
  // Set this as the administrator role.
  variable_set('user_admin_role', $admin_role->rid);

  // Assign user 1 the "administrator" role.
  db_insert('users_roles')
    ->fields(array('uid' => 1, 'rid' => $admin_role->rid))
    ->execute();

  // Create a Home link in the main menu.
  $item = array(
    'link_title' => st('Home'),
    'link_path' => '<front>',
    'menu_name' => 'main-menu',
  );
  menu_link_save($item);

  // Update the menu router information.
  menu_rebuild();

  // Enable the admin theme.
  db_update('system')
    ->fields(array('status' => 1))
    ->condition('type', 'theme')
    ->condition('name', 'seven')
    ->execute();
  variable_set('admin_theme', 'seven');
  variable_set('node_admin_theme', '1');

  // Generate test content.
  module_load_include('inc', 'devel_generate', 'devel_generate');
  module_load_include('inc', 'devel_generate');

  $values = array();
  $values['values']['kill_content'] = FALSE;
  $values['values']['title_length'] = 6;
  $values['values']['num_nodes'] = 50;
  $values['values']['max_comments'] = 0;
  $values['values']['node_types'] = drupal_map_assoc(['article', 'sub_article']);
  devel_generate_content($values);
}
